<?xml version="1.0" encoding="UTF-8"?>
<refentry xml:id="twine-writerd-8" xmlns="http://docbook.org/ns" version="5.0" xml:lang="en">
  <info>
	<title>Twine Queue Injection Utility</title>
	<productname>Twine</productname>
	<authorgroup>
	  <author>
		<personname>
		  <firstname>Mo</firstname>
		  <surname>McRoberts</surname>
		</personname>
		<affiliation>
		  <org>
			<orgname>BBC</orgname>
			<orgdiv>Archive Development</orgdiv>
			<uri>http://www.bbc.co.uk/archive/</uri>
		  </org>
		</affiliation>
	  </author>
	</authorgroup>
	<copyright>
	  <year>2014</year>
	  <holder>BBC</holder>
	</copyright>
  </info>
  
  <refmeta>
	<refentrytitle>twine-inject</refentrytitle>
	<manvolnum>1</manvolnum>
  </refmeta>

  <refnamediv>
	<refname>twine-inject</refname>
	<refpurpose>Inject a file into the Twine processing queue</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
	<cmdsynopsis>
	    <command>twine-writerd</command>
		<arg choice="opt"><option>-h</option></arg>
		<arg choice="opt"><option>-c <replaceable>config-file</replaceable></option></arg>
		<arg choice="req"><option>-t <replaceable>mime-type</replaceable></option></arg>
		<arg choice="opt">&lt; <replaceable>input-file</replaceable></arg>
	</cmdsynopsis>
  </refsynopsisdiv>

  <refsect1>
	<title>Description</title>
	<para>
	  <command>twine-inject</command> reads a file from standard-input and
	  feeds it to the AMQP message broker used by <citerefentry><refentrytitle>twine-writerd</refentrytitle><manvolnum>8</manvolnum></citerefentry>.
	</para>
	<para>
	  You can use <command>twine-inject</command> in lieu of having a
	  specifically-written bridge, in order to inject messages of any content
	  type for processing on an individual basis. Depending upon
	  requirements, using <command>twine-inject</command> may be suitable for
	  use as part of simple workflows, or simply for debugging message
	  processing.
	</para>
	<para>
	  Note that at present, <command>twine-inject</command> does not
	  interpret the specified MIME type nor file contents in any way
	  whatsoever: provided the contents of the file were delivered to
	  the AMQP message broker without incident, <command>twine-inject</command>
	  will exit successfully.
	</para>
  </refsect1>
  
  <refsect1>
	<title>Options</title>
	
	<variablelist>
	  <varlistentry>
		<term><option>-h</option></term>
		<listitem>
		  <para>
			Print a summary of command-line options and exit immediately.
		  </para>
		</listitem>
	  </varlistentry>
	  
	  <varlistentry>
		<term><option>-c <replaceable>config-file</replaceable></option></term>
		<listitem>
		  <para>
			Causes <command>twine-writerd</command> to load the specified
			configuration file instead of the default system-wide configuration
			file. See <citerefentry><refentrytitle>twine.conf</refentrytitle><manvolnum>5</manvolnum></citerefentry>
			for further information on the configuration file format.
		  </para>
		</listitem>
	  </varlistentry>

	  <varlistentry>
		<term><option>-t <replaceable>mime-type</replaceable></option></term>
		<listitem>
		  <para>
			Input file MIME type. Required.
		  </para>
		  <para>
			Specifies the content type of the message sent to
			<citerefentry><refentrytitle>twine-writerd</refentrytitle><manvolnum>8</manvolnum></citerefentry>.
			The processor module used to handle the message depends upon
			the MIME type specified; if no loaded processor module supports
			the MIME type of the message, processing by <command>twine-writerd</command> will fail.
		  </para>
		</listitem>
	  </varlistentry>
	  
	</variablelist>
  </refsect1>
  
  <refsect1>
	<title>See also</title>
	<para>
	  <citerefentry><refentrytitle>twine.conf</refentrytitle><manvolnum>5</manvolnum></citerefentry>,
	  <citerefentry><refentrytitle>twine-writerd</refentrytitle><manvolnum>8</manvolnum></citerefentry>.
	</para>
  </refsect1>

</refentry>
